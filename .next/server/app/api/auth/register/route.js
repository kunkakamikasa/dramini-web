"use strict";(()=>{var e={};e.id=2,e.ids=[2],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6005:e=>{e.exports=require("node:crypto")},5562:(e,o,r)=>{r.r(o),r.d(o,{originalPathname:()=>f,patchFetch:()=>y,requestAsyncStorage:()=>u,routeModule:()=>g,serverHooks:()=>p,staticGenerationAsyncStorage:()=>m});var t={};r.r(t),r.d(t,{POST:()=>d,dynamic:()=>c});var n=r(9303),s=r(8716),i=r(670),a=r(7070),l=r(7897);let c="force-dynamic";async function d(e){try{let{email:o,password:r,name:t,verificationCode:n}=await e.json();if(!o||!r||!t||!n)return a.NextResponse.json({error:"Missing required fields"},{status:400});if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(o))return a.NextResponse.json({error:"Invalid email format"},{status:400});console.log("Registration attempt for email:",o),console.log("Verification code provided:",n),console.log("Current verification codes in storage:",await l.q.keys());let s=await l.q.get(o);if(console.log("Stored data for email:",s),!s)return console.log("Verification code not found for email:",o),a.NextResponse.json({error:"Verification code not found"},{status:400});if(Date.now()>s.expiresAt)return await l.q.delete(o),a.NextResponse.json({error:"Verification code expired"},{status:400});if(s.code!==n)return a.NextResponse.json({error:"Invalid verification code"},{status:400});if(await l.q.delete(o),await l.r.findByEmail(o))return a.NextResponse.json({error:"User already exists"},{status:400});let i=await l.r.create({email:o,password:r,name:t});return a.NextResponse.json({userId:i.id,email:i.email,name:i.name,coins:i.coins})}catch(e){return console.error("Registration error:",e),a.NextResponse.json({error:"Registration failed"},{status:500})}}let g=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/auth/register/route",pathname:"/api/auth/register",filename:"route",bundlePath:"app/api/auth/register/route"},resolvedPagePath:"/Users/mayingkun/mkwork/cursorproject/H5/Dramini/app/api/auth/register/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:u,staticGenerationAsyncStorage:m,serverHooks:p}=g,f="/api/auth/register/route";function y(){return(0,i.patchFetch)({serverHooks:p,staticGenerationAsyncStorage:m})}},7897:(e,o,r)=>{r.d(o,{r:()=>a,q:()=>i});var t=r(4486);let n="verification_code:",s=new Map,i={async get(e){try{let o;console.log("=== KV GET VERIFICATION CODE ==="),console.log("Email:",e);let r=`${n}${e}`;console.log("KV Key:",r);try{o=await t.kv.get(r)||void 0,console.log("Retrieved data from KV:",o)}catch(r){console.log("KV not available, falling back to memory storage"),o=s.get(e),console.log("Retrieved data from memory:",o)}if(o){let n=Date.now(),i=n>o.expiresAt;if(console.log("Current time:",new Date(n).toISOString()),console.log("Expires at:",new Date(o.expiresAt).toISOString()),console.log("Is expired:",i),i){console.log("Code is expired, removing it");try{await t.kv.del(r)}catch(o){s.delete(e)}return}}return console.log("=== END KV GET ==="),o||void 0}catch(r){console.error("Error getting verification code:",r);let o=s.get(e);if(o&&Date.now()>o.expiresAt){s.delete(e);return}return o||void 0}},async set(e,o){try{console.log("=== KV SET VERIFICATION CODE ==="),console.log("Email:",e),console.log("Code:",o.code),console.log("Expires at:",new Date(o.expiresAt).toISOString());let r=`${n}${e}`;console.log("KV Key:",r);let i=Math.floor((o.expiresAt-Date.now())/1e3);console.log("TTL (seconds):",i);try{await t.kv.setex(r,i,o),console.log("Successfully stored in KV")}catch(r){console.log("KV not available, storing in memory"),s.set(e,o),console.log("Successfully stored in memory")}console.log("=== END KV SET ===")}catch(r){console.error("Error setting verification code:",r),s.set(e,o),console.log("Fallback: stored in memory")}},async delete(e){try{console.log("=== KV DELETE VERIFICATION CODE ==="),console.log("Email:",e);let o=`${n}${e}`;console.log("KV Key:",o);try{let e=await t.kv.del(o);console.log("Deleted count from KV:",e)}catch(o){console.log("KV not available, deleting from memory"),s.delete(e),console.log("Deleted from memory")}console.log("=== END KV DELETE ===")}catch(o){console.error("Error deleting verification code:",o),s.delete(e),console.log("Fallback: deleted from memory")}},async keys(){try{console.log("=== KV GET ALL KEYS ===");let e=`${n}*`;console.log("Pattern:",e);try{let o=await t.kv.keys(e);console.log("Found keys in KV:",o);let r=o.map(e=>e.replace(n,""));return console.log("Emails from KV:",r),console.log("=== END KV GET ALL KEYS ==="),r}catch(o){console.log("KV not available, getting keys from memory");let e=Array.from(s.keys());return console.log("Emails from memory:",e),console.log("=== END KV GET ALL KEYS ==="),e}}catch(o){console.error("Error getting keys:",o);let e=Array.from(s.keys());return console.log("Fallback: emails from memory:",e),e}}},a={async create(e){try{console.log("Creating user via API:",e.email);let o=await fetch("https://dramini-api.onrender.com/api/v1/user/register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!o.ok)throw Error(`API call failed: ${o.status}`);let r=await o.json();return console.log("User created successfully via API:",r.id),{id:r.id,email:r.email,name:r.name||"",coins:r.coins||0}}catch(e){throw console.error("Error creating user via API:",e),e}},async findByEmail(e){try{console.log("Finding user by email via API:",e);let o=await fetch(`https://dramini-api.onrender.com/api/v1/user/find-by-email?email=${encodeURIComponent(e)}`);if(!o.ok){if(404===o.status)return console.log("User not found"),null;throw Error(`API call failed: ${o.status}`)}let r=await o.json();return console.log("User found via API:",r.id),{id:r.id,email:r.email,name:r.name||"",coins:r.coins||0}}catch(e){return console.error("Error finding user via API:",e),null}},async updateCoins(e,o){try{console.log("Updating user coins via API:",e,o);let r=await fetch(`https://dramini-api.onrender.com/api/v1/user/${e}/coins`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({coins:o})});if(!r.ok)throw Error(`API call failed: ${r.status}`);console.log("User coins updated successfully via API")}catch(e){throw console.error("Error updating user coins via API:",e),e}}}}};var o=require("../../../../webpack-runtime.js");o.C(e);var r=e=>o(o.s=e),t=o.X(0,[276,972,486],()=>r(5562));module.exports=t})();